name: Auto Tag, Release, and ZIP Repo

on:
  push:
    branches:
      - master

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Fetch all tags
      run: git fetch --tags

    - name: Get latest tag
      id: get_latest_tag
      run: echo ::set-output name=tag::$(git describe --tags git rev-list --tags --max-count=1)

    - name: Calculate new tag
      id: calc_new_tag
      run: |
        if [ -z "${{ steps.get_latest_tag.outputs.tag }}" ]; then
          echo "No tags found, setting initial tag to v0.1"
          echo ::set-output name=new_tag::v0.1
        else
          echo "Latest tag: ${{ steps.get_latest_tag.outputs.tag }}"
          latest_tag=${{ steps.get_latest_tag.outputs.tag }}
          # Extract the patch number
          latest_tag_number=${latest_tag#v0.}
          new_patch=$((latest_tag_number + 1))
          new_tag="v0.$new_patch"
          echo "New tag: $new_tag"
          echo ::set-output name=new_tag::$new_tag
        fi

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Update version in XML files
      run: |
        python3 - <<EOF
import xml.etree.ElementTree as ET

files_to_update = [
    'ModData/data/stringable-en.xml',
    'ModData/data/stringtable-de.xml'
]

new_version = "${{ steps.calc_new_tag.outputs.new_tag }}"

for file in files_to_update:
    tree = ET.parse(file)
    root = tree.getroot()
    for string in root.findall('.//String[@_locID="26217"]'):
        string.text = f"Halo Wars Spirit of Fire v{new_version} Early Access"
    tree.write(file, encoding='utf-8', xml_declaration=True)
EOF

    - name: Install 7zip
      run: sudo apt-get install p7zip-full -y

    - name: Create ZIP file with ModData and .hwmod file
      run: 7z a -tzip -mx=9 spirit-of-fire.zip ./ModData ./*.hwmod

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.calc_new_tag.outputs.new_tag }}
        release_name: ${{ steps.calc_new_tag.outputs.new_tag }}
        draft: false
        prerelease: false

    - name: Upload ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./spirit-of-fire.zip
        asset_name: spirit-of-fire.zip
        asset_content_type: application/zip
